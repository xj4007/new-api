# New-API Docker Compose Configuration
# 
# Quick Start:
#   1. docker-compose up -d
#   2. Access at http://localhost:3000
#
# Using MySQL instead of PostgreSQL:
#   1. Comment out the postgres service and SQL_DSN line 15
#   2. Uncomment the mysql service and SQL_DSN line 16
#   3. Uncomment mysql in depends_on (line 28)
#   4. Uncomment mysql_data in volumes section (line 64)
#
# ⚠️  IMPORTANT: Change all default passwords before deploying to production!

version: '3.4'

services:
  new-api:
    build: .
    # image: calciumion/new-api:latest  # 注释掉远程镜像，使用本地构建
    container_name: new-api
    restart: always
    command: --log-dir /app/logs
    ports:
      - "3010:3000"  # 外部使用3010端口访问，避免端口冲突
    volumes:
      - ./data:/data
      - ./logs:/app/logs
    env_file:
      - .env  # 使用.env文件中的环境变量配置
    
    # 移除host网络模式，使用默认bridge网络可以访问外部IP
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:3000/api/status | grep -o '\"success\":\\s*true' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL和Redis服务已被屏蔽，使用服务器上已有的服务
  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   restart: always

  # mysql:
  #   image: mysql:8.2
  #   container_name: mysql
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 123456
  #     MYSQL_DATABASE: new-api
  #   volumes:
  #     - mysql_data:/var/lib/mysql

# volumes:
#   mysql_data:
